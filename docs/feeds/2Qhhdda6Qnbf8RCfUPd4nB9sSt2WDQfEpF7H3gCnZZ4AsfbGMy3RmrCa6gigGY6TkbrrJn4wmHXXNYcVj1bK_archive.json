{"id":"2Qhhdda6Qnbf8RCfUPd4nB9sSt2WDQfEpF7H3gCnZZ4AsfbGMy3RmrCa6gigGY6TkbrrJn4wmHXXNYcVj1bK","title":"top scoring links : rust","displayTitle":"Reddit - Rust","url":"https://www.reddit.com/r/rust/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/rust/top/?sort=top&t=day&limit=6","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":6,"items":[{"title":"Introducing json_preprocessor","url":"https://www.reddit.com/r/rust/comments/1in7afe/introducing_json_preprocessor/","date":1739302734,"author":"/u/hajhawa","guid":446,"unread":true,"content":"<p>Do you ever feel like your json files need a bit more to make them interesting? Do you crave job security? Introducing json_preprocessor, sometimes shortened to jsonpp. It is a functional interpreted programming language that evaluates to JSON.</p><p>This is not a real tool, it's a joke I spent a bit of time on, please for the love of god don't use it.</p>","contentLength":347,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"[OC] Systems Programming: Everything is trying to kill you and how to stop it","url":"https://www.reddit.com/r/rust/comments/1in1t0t/oc_systems_programming_everything_is_trying_to/","date":1739289340,"author":"/u/Buzz_Cut","guid":445,"unread":true,"content":"<p>Hi everyone! I <a href=\"https://www.reddit.com/r/rust/comments/1iddids/help_me_collect_the_best_examples_of_bugs_rust/\">posted here about a week ago</a> looking for some suggestions on types of bugs rust avoids. I hosted a workshop for some undergrads at my school about what even is systems programming followed by crash course live coding session in Rust.</p><p>It's my first time holding a talk so I would love any of your feedback. There were some technical difficulties but 95% of the talk came out unscathed lol.</p><p>Keep in mind that the talk was geared towards people who probably have never even heard of systems programming or memory. I hope my explanations can help some beginners out there!</p><p>P.S. my club will be running a workshop on mathematical modeling of robots this coming week. If you are interested please join our discord! <a href=\"https://hacklab.space/discord\">https://hacklab.space/discord</a></p>","contentLength":750,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"FOSDEM 2025 - Rust for Linux","url":"https://fosdem.org/2025/schedule/event/fosdem-2025-6507-rust-for-linux/","date":1739285604,"author":"/u/l-const","guid":448,"unread":true,"content":"<p><a href=\"https://rust-for-linux.com\">Rust for Linux</a> is the project adding support for the Rust language to the Linux kernel.</p><p>This talk will give a high-level overview of the project and will walk its history from the beginning -- it sounds like it was yesterday when we started, but it has been more than 4 years now.</p><p>How did the endeavor start? What challenges have we faced? Who are the people behind it? Which projects do we collaborate with? How are we reconfiguring a large system with huge inertia while it keeps running? Can a similar approach be applied to other projects? What do kernel developers think about Rust?</p><p>Speaking about Rust, why did we go with Rust, and not something else? How stable is the Rust we use in the kernel? What does it mean to use unstable features in this context? How did we hedge against those? What is the situation with distribution toolchain support? What about GCC and Rust?</p><p>And most importantly, since this is open source: how can someone contribute?</p>","contentLength":951,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1in0cd5/fosdem_2025_rust_for_linux/"},{"title":"PL/Rust: a loadable procedural language for writing PostgreSQL functions in Rust that compile to native code","url":"https://github.com/tcdi/plrust","date":1739281923,"author":"/u/kibwen","guid":447,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1imz0zv/plrust_a_loadable_procedural_language_for_writing/"},{"title":"Migrating a Ray-Tracing Calculator from C to Rust â€“ Planning a Masterâ€™s Thesis & Looking for Advice (C, Rust, BSP-Tree)","url":"https://www.reddit.com/r/rust/comments/1imws36/migrating_a_raytracing_calculator_from_c_to_rust/","date":1739274523,"author":"/u/Smil3More","guid":444,"unread":true,"content":"<p>I am planning a  in which I need to modernize and parallelize an <strong>existing scientific C program</strong> for <strong>electromagnetic wave propagation calculation/simulation</strong>. The goal is to migrate the program to  to improve long-term maintainability, safety, and performance.</p><p>It's a Linux command-line program that takes a TXT input file with room and material specifications, calculates the electromagnetic spread (heatmap), and outputs a TXT file, which is later converted into a graphical solution in another program.</p><p><strong>My focus is solely on the calculation part.</strong></p><ul><li>Simulates <strong>electromagnetic wave propagation using ray tracing</strong>. (only mathematical, no graphical conversion)</li><li><strong>BSP tree (Binary Space Partitioning)</strong> as the core data structure for geometry management.</li><li><strong>C-based, currently single-threaded</strong>, running on . (takes a loooong time to calculate)</li><li>Future goals: <strong>CPU parallelization &amp; potential GPU extension (OpenCL, Vulkan Compute).</strong></li></ul><ol><li><strong>BSP Tree in Rust â€“ Feasible or alternative approaches?</strong><ul><li>Is <strong>Rust well-suited for BSP trees</strong>, or are there <strong>better parallel alternatives</strong>?</li><li>Are there  that could be useful for ray tracing &amp; BSP trees?</li></ul></li><li><strong>Rust beginner with decent programming experience â€“ Is migration realistic?</strong><ul><li>I have <strong>solid programming experience in C++, Python, Dart</strong> but <strong>very little Rust knowledge</strong>.</li><li>Is <strong>Rust a good choice for complex scientific simulations</strong>, or is the learning curve too steep?</li></ul></li><li><strong>Full migration vs. partial migration &amp; C/Rust interoperability</strong><ul><li>Would it make more sense to <strong>migrate only the core algorithm to Rust</strong> and keep the rest in C?</li><li>Has anyone worked with <strong>C/Rust interop via FFI or</strong> for a mixed-language approach?</li><li>How practical is a , running Rust and C in parallel?</li></ul></li></ol><p>I would appreciate any <strong>best practices, experiences, and resources on using Rust for scientific applications</strong>! ðŸš€</p>","contentLength":1754,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"jiff 0.2.0 released - A relatively new datetime library with automatic tzdb support, DST safe arithmetic/rounding and more","url":"https://github.com/BurntSushi/jiff/releases/tag/0.2.0","date":1739242728,"author":"/u/burntsushi","guid":449,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1imonui/jiff_020_released_a_relatively_new_datetime/"}],"tags":["dev","reddit","rust"]}